{"version":3,"sources":["js/tsnejs.js","components/VizCanvas.tsx","models/mappings.ts","components/SelectionKpis.tsx","components/AutoSuggest.js","util/dimensionGroupingUtil.js","components/CheckBox.js","components/DimensionPicker.js","components/Controls.tsx","components/Dropdown.tsx","components/Legends.tsx","layouts/Home.tsx","components/Routes.tsx","App.js","serviceWorker.js","index.tsx"],"names":["tsnejs","REVISION","global","assert","condition","message","getopt","opt","field","defaultval","hasOwnProperty","return_v","v_val","randn","mu","std","gaussRandom","u","Math","random","v","r","c","sqrt","log","zeros","n","isNaN","ArrayBuffer","arr","Array","i","Float64Array","randn2d","d","s","uses","x","xhere","j","push","L2","x1","x2","D","length","x1i","x2i","d2p","perplexity","tol","Nf","N","floor","Htarget","P","prow","betamin","Infinity","betamax","beta","done","num","psum","pj","exp","Hhere","abs","Pout","N2","max","sign","tSNE","this","dim","epsilon","iter","prototype","initDataRaw","X","dists","dist","xtod","initSolution","initDataDist","Y","gains","ystep","getSolution","step","cg","costGrad","cost","grad","ymean","gid","sid","gainid","newgain","newsid","debugGrad","e","yold","cg0","cg1","analytic","numerical","console","pmul","Qu","qsum","dsum","dhere","qu","NN","Q","q","gsum","premult","lib","module","exports","window","width","innerWidth","height","innerHeight","padding","top","right","bottom","left","maxRadius","VizCanvas","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","refs","xScale","d3","domain","range","yScale","rScale","clamp","colorScale","transform","context","undefined","initCanvas","_this2","vizCanvas","style","on","handleClick","scaleExtent","translateExtent","zoom","dpr","devicePixelRatio","rect","getBoundingClientRect","getContext","scale","setState","_this3","save","clearRect","translate","y","k","positionData","forEach","node","nodeData","colorDim","dimensions","colorValue","index","radiusDim","radiusValue","value","font","textAlign","beginPath","arc","PI","active","color","globalAlpha","fillStyle","closePath","fill","fillText","name","restore","hitNode","_this4","invertX","offsetX","invertY","offsetY","point","dx","dy","radius","selected","objectSpread","onTick","onClick","min","react_default","a","createElement","ref","className","Component","nodes","flatDimensions","allDimensions","flatMap","values","vals","map","foundDim","find","dimension","filter","extent","mean","median","modelData","SelectionDimensions","_ref","dimensionInfo","toFixed","valueNumber","maxNumber","key","backgroundColor","municipalities","entries","municipalityMapping","_ref2","slicedToArray","getSuggestions","inputValue","trim","toLowerCase","inputLength","muni","slice","getSuggestionValue","suggestion","renderSuggestion","AutoSuggest","lookUpCommunityId","communityName","_ref3","_ref4","selectedMunicipalityId","onChange","event","_ref5","newValue","method","onSuggestionsFetchRequested","_ref6","suggestions","onSuggestionsClearRequested","_this$state","inputProps","placeholder","dist_default","React","dimGroupings","dimGroupingJson","group","groupingKey","grouping","keys","Checkbox","isChecked","toggleCheckboxChange","label","onIdChange","ids","id","checkValue","type","checked","DimensionPicker","groupings","changedGoal","kpiIds","merge","selectedKpis","fontWeight","fontSize","href","CheckBox","element","_changeGoalIds","target","Controls","onSelectMunicipalityId","onChangeDimensions","components_DimensionPicker","dims","components_AutoSuggest","Dropdown","options","data","selectedOption","default","react_select_esm","option","menuPlacement","classNamePrefix","Legend","onSelectColor","onSelectSize","colorData","sizeData","muniSelected","size","components_Dropdown","background","Home","TSNE","animateTSNE","kpis","defaultKpi","sizeDimension","colorDimension","tsneComplete","dataUpdate","_createTSNE","_runTSNE","steps","requestAnimationFrame","selectedNode","isNode","updatedModelData","includes","kpi","Legends","_selectColor","_selectSize","Boolean","SelectionKpis","components_Controls","_selectedMunicipalityId","_changeDimensions","components_VizCanvas","_selectNode","RoutesWithRouter","withRouter","location","react_transition_group","mountOnEnter","unmountOnExit","timeout","classNames","react_router_dom","react_router","path","exact","component","history","createBrowserHistory","listen","action","gtag","page_title","pathname","page_path","App","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.efd9bd81.chunk.js","sourcesContent":["// create main global object\r\nvar tsnejs = tsnejs || { REVISION: 'ALPHA' };\r\n\r\n(function(global) {\r\n  \"use strict\";\r\n\r\n  // utility function\r\n  var assert = function(condition, message) {\r\n    if (!condition) { throw message || \"Assertion failed\"; }\r\n  }\r\n\r\n  // syntax sugar\r\n  var getopt = function(opt, field, defaultval) {\r\n    if(opt.hasOwnProperty(field)) {\r\n      return opt[field];\r\n    } else {\r\n      return defaultval;\r\n    }\r\n  }\r\n\r\n  // return 0 mean unit standard deviation random number\r\n  var return_v = false;\r\n  var v_val = 0.0;\r\n  var gaussRandom = function() {\r\n    if(return_v) {\r\n      return_v = false;\r\n      return v_val;\r\n    }\r\n    var u = 2*Math.random()-1;\r\n    var v = 2*Math.random()-1;\r\n    var r = u*u + v*v;\r\n    if(r == 0 || r > 1) return gaussRandom();\r\n    var c = Math.sqrt(-2*Math.log(r)/r);\r\n    v_val = v*c; // cache this for next function call for efficiency\r\n    return_v = true;\r\n    return u*c;\r\n  }\r\n\r\n  // return random normal number\r\n  var randn = function(mu, std){ return mu+gaussRandom()*std; }\r\n\r\n  // utilitity that creates contiguous vector of zeros of size n\r\n  var zeros = function(n) {\r\n    if(typeof(n)==='undefined' || isNaN(n)) { return []; }\r\n    if(typeof ArrayBuffer === 'undefined') {\r\n      // lacking browser support\r\n      var arr = new Array(n);\r\n      for(var i=0;i<n;i++) { arr[i]= 0; }\r\n      return arr;\r\n    } else {\r\n      return new Float64Array(n); // typed arrays are faster\r\n    }\r\n  }\r\n\r\n  // utility that returns 2d array filled with random numbers\r\n  // or with value s, if provided\r\n  var randn2d = function(n,d,s) {\r\n    var uses = typeof s !== 'undefined';\r\n    var x = [];\r\n    for(var i=0;i<n;i++) {\r\n      var xhere = [];\r\n      for(var j=0;j<d;j++) {\r\n        if(uses) {\r\n          xhere.push(s);\r\n        } else {\r\n          xhere.push(randn(0.0, 1e-4));\r\n        }\r\n      }\r\n      x.push(xhere);\r\n    }\r\n    return x;\r\n  }\r\n\r\n  // compute L2 distance between two vectors\r\n  var L2 = function(x1, x2) {\r\n    var D = x1.length;\r\n    var d = 0;\r\n    for(var i=0;i<D;i++) {\r\n      var x1i = x1[i];\r\n      var x2i = x2[i];\r\n      d += (x1i-x2i)*(x1i-x2i);\r\n    }\r\n    return d;\r\n  }\r\n\r\n  // compute pairwise distance in all vectors in X\r\n  var xtod = function(X) {\r\n    var N = X.length;\r\n    var dist = zeros(N * N); // allocate contiguous array\r\n    for(var i=0;i<N;i++) {\r\n      for(var j=i+1;j<N;j++) {\r\n        var d = L2(X[i], X[j]);\r\n        dist[i*N+j] = d;\r\n        dist[j*N+i] = d;\r\n      }\r\n    }\r\n    return dist;\r\n  }\r\n\r\n  // compute (p_{i|j} + p_{j|i})/(2n)\r\n  var d2p = function(D, perplexity, tol) {\r\n    var Nf = Math.sqrt(D.length); // this better be an integer\r\n    var N = Math.floor(Nf);\r\n    assert(N === Nf, \"D should have square number of elements.\");\r\n    var Htarget = Math.log(perplexity); // target entropy of distribution\r\n    var P = zeros(N * N); // temporary probability matrix\r\n\r\n    var prow = zeros(N); // a temporary storage compartment\r\n    for(var i=0;i<N;i++) {\r\n      var betamin = -Infinity;\r\n      var betamax = Infinity;\r\n      var beta = 1; // initial value of precision\r\n      var done = false;\r\n      var maxtries = 50;\r\n\r\n      // perform binary search to find a suitable precision beta\r\n      // so that the entropy of the distribution is appropriate\r\n      var num = 0;\r\n      while(!done) {\r\n        //debugger;\r\n\r\n        // compute entropy and kernel row with beta precision\r\n        var psum = 0.0;\r\n        for(var j=0;j<N;j++) {\r\n          var pj = Math.exp(- D[i*N+j] * beta);\r\n          if(i===j) { pj = 0; } // we dont care about diagonals\r\n          prow[j] = pj;\r\n          psum += pj;\r\n        }\r\n        // normalize p and compute entropy\r\n        var Hhere = 0.0;\r\n        for(var j=0;j<N;j++) {\r\n          if(psum == 0) {\r\n             var pj = 0;\r\n          } else {\r\n             var pj = prow[j] / psum;\r\n          }\r\n          prow[j] = pj;\r\n          if(pj > 1e-7) Hhere -= pj * Math.log(pj);\r\n        }\r\n\r\n        // adjust beta based on result\r\n        if(Hhere > Htarget) {\r\n          // entropy was too high (distribution too diffuse)\r\n          // so we need to increase the precision for more peaky distribution\r\n          betamin = beta; // move up the bounds\r\n          if(betamax === Infinity) { beta = beta * 2; }\r\n          else { beta = (beta + betamax) / 2; }\r\n\r\n        } else {\r\n          // converse case. make distrubtion less peaky\r\n          betamax = beta;\r\n          if(betamin === -Infinity) { beta = beta / 2; }\r\n          else { beta = (beta + betamin) / 2; }\r\n        }\r\n\r\n        // stopping conditions: too many tries or got a good precision\r\n        num++;\r\n        if(Math.abs(Hhere - Htarget) < tol) { done = true; }\r\n        if(num >= maxtries) { done = true; }\r\n      }\r\n\r\n      // console.log('data point ' + i + ' gets precision ' + beta + ' after ' + num + ' binary search steps.');\r\n      // copy over the final prow to P at row i\r\n      for(var j=0;j<N;j++) { P[i*N+j] = prow[j]; }\r\n\r\n    } // end loop over examples i\r\n\r\n    // symmetrize P and normalize it to sum to 1 over all ij\r\n    var Pout = zeros(N * N);\r\n    var N2 = N*2;\r\n    for(var i=0;i<N;i++) {\r\n      for(var j=0;j<N;j++) {\r\n        Pout[i*N+j] = Math.max((P[i*N+j] + P[j*N+i])/N2, 1e-100);\r\n      }\r\n    }\r\n\r\n    return Pout;\r\n  }\r\n\r\n  // helper function\r\n  function sign(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; }\r\n\r\n  var tSNE = function(opt) {\r\n    var opt = opt || {};\r\n    this.perplexity = getopt(opt, \"perplexity\", 30); // effective number of nearest neighbors\r\n    this.dim = getopt(opt, \"dim\", 2); // by default 2-D tSNE\r\n    this.epsilon = getopt(opt, \"epsilon\", 10); // learning rate\r\n\r\n    this.iter = 0;\r\n  }\r\n\r\n  tSNE.prototype = {\r\n\r\n    // this function takes a set of high-dimensional points\r\n    // and creates matrix P from them using gaussian kernel\r\n    initDataRaw: function(X) {\r\n      var N = X.length;\r\n      var D = X[0].length;\r\n      assert(N > 0, \" X is empty? You must have some data!\");\r\n      assert(D > 0, \" X[0] is empty? Where is the data?\");\r\n      var dists = xtod(X); // convert X to distances using gaussian kernel\r\n      this.P = d2p(dists, this.perplexity, 1e-4); // attach to object\r\n      this.N = N; // back up the size of the dataset\r\n      this.initSolution(); // refresh this\r\n    },\r\n\r\n    // this function takes a given distance matrix and creates\r\n    // matrix P from them.\r\n    // D is assumed to be provided as a list of lists, and should be symmetric\r\n    initDataDist: function(D) {\r\n      var N = D.length;\r\n      assert(N > 0, \" X is empty? You must have some data!\");\r\n      // convert D to a (fast) typed array version\r\n      var dists = zeros(N * N); // allocate contiguous array\r\n      for(var i=0;i<N;i++) {\r\n        for(var j=i+1;j<N;j++) {\r\n          var d = D[i][j];\r\n          dists[i*N+j] = d;\r\n          dists[j*N+i] = d;\r\n        }\r\n      }\r\n      this.P = d2p(dists, this.perplexity, 1e-4);\r\n      this.N = N;\r\n      this.initSolution(); // refresh this\r\n    },\r\n\r\n    // (re)initializes the solution to random\r\n    initSolution: function() {\r\n      // generate random solution to t-SNE\r\n      this.Y = randn2d(this.N, this.dim); // the solution\r\n      this.gains = randn2d(this.N, this.dim, 1.0); // step gains to accelerate progress in unchanging directions\r\n      this.ystep = randn2d(this.N, this.dim, 0.0); // momentum accumulator\r\n      this.iter = 0;\r\n    },\r\n\r\n    // return pointer to current solution\r\n    getSolution: function() {\r\n      return this.Y;\r\n    },\r\n\r\n    // perform a single step of optimization to improve the embedding\r\n    step: function() {\r\n      this.iter += 1;\r\n      var N = this.N;\r\n\r\n      var cg = this.costGrad(this.Y); // evaluate gradient\r\n      var cost = cg.cost;\r\n      var grad = cg.grad;\r\n\r\n      // perform gradient step\r\n      var ymean = zeros(this.dim);\r\n      for(var i=0;i<N;i++) {\r\n        for(var d=0;d<this.dim;d++) {\r\n          var gid = grad[i][d];\r\n          var sid = this.ystep[i][d];\r\n          var gainid = this.gains[i][d];\r\n\r\n          // compute gain update\r\n          var newgain = sign(gid) === sign(sid) ? gainid * 0.8 : gainid + 0.2;\r\n          if(newgain < 0.01) newgain = 0.01; // clamp\r\n          this.gains[i][d] = newgain; // store for next turn\r\n\r\n          // compute momentum step direction\r\n          var momval = this.iter < 250 ? 0.5 : 0.8;\r\n          var newsid = momval * sid - this.epsilon * newgain * grad[i][d];\r\n          this.ystep[i][d] = newsid; // remember the step we took\r\n\r\n          // step!\r\n          this.Y[i][d] += newsid;\r\n\r\n          ymean[d] += this.Y[i][d]; // accumulate mean so that we can center later\r\n        }\r\n      }\r\n\r\n      // reproject Y to be zero mean\r\n      for(var i=0;i<N;i++) {\r\n        for(var d=0;d<this.dim;d++) {\r\n          this.Y[i][d] -= ymean[d]/N;\r\n        }\r\n      }\r\n\r\n      //if(this.iter%100===0) console.log('iter ' + this.iter + ', cost: ' + cost);\r\n      return cost; // return current cost\r\n    },\r\n\r\n    // for debugging: gradient check\r\n    debugGrad: function() {\r\n      var N = this.N;\r\n\r\n      var cg = this.costGrad(this.Y); // evaluate gradient\r\n      var cost = cg.cost;\r\n      var grad = cg.grad;\r\n\r\n      var e = 1e-5;\r\n      for(var i=0;i<N;i++) {\r\n        for(var d=0;d<this.dim;d++) {\r\n          var yold = this.Y[i][d];\r\n\r\n          this.Y[i][d] = yold + e;\r\n          var cg0 = this.costGrad(this.Y);\r\n\r\n          this.Y[i][d] = yold - e;\r\n          var cg1 = this.costGrad(this.Y);\r\n\r\n          var analytic = grad[i][d];\r\n          var numerical = (cg0.cost - cg1.cost) / ( 2 * e );\r\n          console.log(i + ',' + d + ': gradcheck analytic: ' + analytic + ' vs. numerical: ' + numerical);\r\n\r\n          this.Y[i][d] = yold;\r\n        }\r\n      }\r\n    },\r\n\r\n    // return cost and gradient, given an arrangement\r\n    costGrad: function(Y) {\r\n      var N = this.N;\r\n      var dim = this.dim; // dim of output space\r\n      var P = this.P;\r\n\r\n      var pmul = this.iter < 100 ? 4 : 1; // trick that helps with local optima\r\n\r\n      // compute current Q distribution, unnormalized first\r\n      var Qu = zeros(N * N);\r\n      var qsum = 0.0;\r\n      for(var i=0;i<N;i++) {\r\n        for(var j=i+1;j<N;j++) {\r\n          var dsum = 0.0;\r\n          for(var d=0;d<dim;d++) {\r\n            var dhere = Y[i][d] - Y[j][d];\r\n            dsum += dhere * dhere;\r\n          }\r\n          var qu = 1.0 / (1.0 + dsum); // Student t-distribution\r\n          Qu[i*N+j] = qu;\r\n          Qu[j*N+i] = qu;\r\n          qsum += 2 * qu;\r\n        }\r\n      }\r\n      // normalize Q distribution to sum to 1\r\n      var NN = N*N;\r\n      var Q = zeros(NN);\r\n      for(var q=0;q<NN;q++) { Q[q] = Math.max(Qu[q] / qsum, 1e-100); }\r\n\r\n      var cost = 0.0;\r\n      var grad = [];\r\n      for(var i=0;i<N;i++) {\r\n        var gsum = new Array(dim); // init grad for point i\r\n        for(var d=0;d<dim;d++) { gsum[d] = 0.0; }\r\n        for(var j=0;j<N;j++) {\r\n          cost += - P[i*N+j] * Math.log(Q[i*N+j]); // accumulate cost (the non-constant portion at least...)\r\n          var premult = 4 * (pmul * P[i*N+j] - Q[i*N+j]) * Qu[i*N+j];\r\n          for(var d=0;d<dim;d++) {\r\n            gsum[d] += premult * (Y[i][d] - Y[j][d]);\r\n          }\r\n        }\r\n        grad.push(gsum);\r\n      }\r\n\r\n      return {cost: cost, grad: grad};\r\n    }\r\n  }\r\n\r\n  global.tSNE = tSNE; // export tSNE class\r\n})(tsnejs);\r\n\r\n\r\n// export the library to window, or to module in nodejs\r\n(function(lib) {\r\n  \"use strict\";\r\n  if (typeof module === \"undefined\" || typeof module.exports === \"undefined\") {\r\n    window.tsnejs = lib; // in ordinary browser attach library to window\r\n  } else {\r\n    module.exports = lib; // in nodejs\r\n  }\r\n})(tsnejs);\r\n","import React, { Component } from \"react\"\nimport * as d3 from \"d3\"\nimport { Inode, InodeDimension } from \"../models/mappings\";\n\nconst width = window.innerWidth;\nconst height = window.innerHeight;\nconst padding = {\n\ttop: 50,\n\tright: 220,\n\tbottom: 0,\n\tleft: 20\n}\n\nlet maxRadius = 20\n\ninterface props {\n\tpositionData: any[]\n\tnodeData: Inode[]\n\tcolorValue: any\n\tradiusValue: any\n\tonClick: (d: any) => void\n}\n\ninterface state {\n\tcontext: any\n}\n\ninterface refs {\n\t[key: string]: any\n}\n\nclass VizCanvas extends Component<props> {\n\tstate: state\n\trefs: refs = {}\n\n\txScale = d3.scaleLinear()\n\t\t.domain([-8, 6])\n\t\t.range([padding.left, width - padding.left - padding.right])\n\n\tyScale = d3.scaleLinear()\n\t\t.domain([-8, 6])\n\t\t.range([padding.top, height - padding.top - padding.bottom])\n\n\trScale = d3.scaleSqrt()\n\t\t.range([0, maxRadius])\n\t\t.clamp(true)\n\n  colorScale = d3.scaleLinear<string,string>()\n    .range([ '#ffc000', '#091e79' ])\n    .clamp(true)\n\n\ttransform = d3.zoomIdentity\n\n\tconstructor(props: props) {\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\tcontext: undefined,\n\t\t}\n\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.initCanvas()\n\t}\n\n\tinitCanvas() {\n\t\td3.select(this.refs.vizCanvas)\n\t\t\t.style('width', width + 'px')\n\t\t\t.style('height', height + 'px')\n\t\t\t.on('click', () => this.handleClick())\n\t\t\t// .call(d3.drag().subject(dragsubject).on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\",dragended))\n\t\t\t.call(d3.zoom()\n\t\t\t\t.scaleExtent([0.7, 8])\n\t\t\t\t.translateExtent([[-width / 2, -height / 2], [width * 3 / 2, height * 3 / 2]])\n\t\t\t\t.on(\"zoom\", () => this.zoom()))\n\n\t\tlet dpr = window.devicePixelRatio || 1,\n\t\t\trect = this.refs.vizCanvas.getBoundingClientRect()\n\n\t\tthis.refs.vizCanvas.width = rect.width * dpr\n\t\tthis.refs.vizCanvas.height = rect.height * dpr\n\n\t\tlet context = this.refs.vizCanvas.getContext('2d')\n\t\tcontext.scale(dpr, dpr)\n\n\t\tthis.setState({ context })\n\t}\n\n\tonTick() {\n\n\t\tif (!this.state.context) return\n\t\tlet context: CanvasRenderingContext2D = this.state.context\n\n\t\tcontext.save()\n\n\t\tcontext.clearRect(0, 0, width, height)\n\t\tcontext.translate(this.transform.x, this.transform.y)\n\t\tcontext.scale(this.transform.k, this.transform.k)\n\n\t\tthis.props.positionData.forEach((d, i) => {\n\n\t\t\tconst node = this.props.nodeData[i]\n\n\t\t\tconst colorDim: InodeDimension = node.dimensions[this.props.colorValue.index],\n\t\t\t\tradiusDim: InodeDimension = node.dimensions[this.props.radiusValue.index]\n\n\t\t\tconst colorValue = (colorDim && colorDim.value !== null) ? +colorDim.value : -1\n\t\t\tconst radiusValue = (radiusDim && radiusDim.value !== undefined) ? +radiusDim.value : -1\n\n\n\t\t\tcontext.font = '10px arial';\n\t\t\tcontext.textAlign = 'center'\n\n\t\t\t// context.globalCompositeOperation = 'overlay'\n\t\t\tcontext.beginPath()\n\t\t\tif (radiusValue > 0) {\n\t\t\t\tcontext.arc(this.xScale(d[0]), this.yScale(d[1]), this.rScale(radiusValue), 0, 2 * Math.PI, true)\n\t\t\t} else {\n\t\t\t\tcontext.arc(this.xScale(d[0]), this.yScale(d[1]), 0.1, 0, 2 * Math.PI, true)\n\t\t\t}\n\n      if(node.active) {\n        node.color = this.colorScale( colorValue )\n        context.globalAlpha = 1\n        context.fillStyle = colorValue > -1 ? node.color : '#fff'\n      } else {\n        context.globalAlpha = 0.3\n        context.fillStyle = '#333'\n      }\n\n\t\t\t// context.strokeStyle = '#333'\n\t\t\t// context.stroke()\n\n\t\t\tcontext.closePath()\n\t\t\tcontext.fill()\n\n\t\t\tif (colorValue === -1) {\n\t\t\t\tcontext.fillStyle = '#333'\n\t\t\t}\n\n\t\t\tif (this.rScale(radiusValue) > 2 || node.active) {\n\t\t\t\t// context.globalCompositeOperation = 'source-over'\n\t\t\t\tcontext.fillText(node.name, this.xScale(d[0]), this.yScale(d[1]) - 1.5 * this.rScale(radiusValue))\n\t\t\t}\n\n\t\t})\n\n\t\tcontext.restore()\n\n\t}\n\n\thandleClick() {\n\t\tlet x = this.transform.invertX(d3.event.offsetX),\n\t\t\ty = this.transform.invertY(d3.event.offsetY),\n\t\t\tcontext = this.state.context\n\n\t\tlet hitNode: any\n\n\t\tlet hits = this.props.positionData.forEach((point, i) => {\n\t\t\tlet dx = x - this.xScale(point[0])\n\t\t\tlet dy = y - this.yScale(point[1])\n\t\t\tlet node = this.props.nodeData[i]\n\n      let radius = node.dimensions[this.props.radiusValue.index].value || 0\n      radius = Math.max(0, +radius)\n      radius = this.rScale( radius )\n      let hit = dx*dx + dy*dy < radius*radius\n\n\t\t\tif (hit) {\n\t\t\t\thitNode = {\n\t\t\t\t\tpoint,\n\t\t\t\t\tindex: i,\n\t\t\t\t\tx: point[0],\n\t\t\t\t\ty: point[1]\n\t\t\t\t}\n\t\t\t}\n\n\t\t})\n\n\t\tif (hitNode) {\n\n\t\t\tthis.props.nodeData.forEach(node => {\n\t\t\t\tnode.active = false\n\t\t\t\tnode.selected = false\n\t\t\t})\n\n\t\t\thitNode = {\n\t\t\t\t...this.props.nodeData[hitNode.index],\n\t\t\t\t...hitNode\n\t\t\t}\n\n\t\t\tlet node = this.props.nodeData[hitNode.index]\n\t\t\tnode.active = true\n\t\t\tnode.selected = true\n\n\t\t\tlet colorValue = node.dimensions[this.props.colorValue.index].value || 0\n\n      if(colorValue == -1) {\n        hitNode.color = '#333'\n      } else {\n        hitNode.color = this.colorScale( +colorValue )\n      }\n\n\t\t} else {\n\n\t\t\tthis.props.nodeData.forEach(node => {\n\t\t\t\tnode.active = true\n\t\t\t\tnode.selected = false\n\t\t\t})\n\n\t\t\thitNode = null\n\t\t}\n\n\t\tthis.onTick()\n\t\tthis.props.onClick(hitNode)\n\n\t}\n\n\tzoom() {\n\t\tthis.transform = d3.event.transform\n\t\tthis.onTick()\n\t}\n\n  render() {\n    this.colorScale.domain([ this.props.colorValue.min, this.props.colorValue.max ])\n    this.rScale.domain([ this.props.radiusValue.min, this.props.radiusValue.max ])\n\n\t\tthis.onTick()\n\n\t\treturn (\n\t\t\t<canvas width={width} height={height} ref=\"vizCanvas\" className='viz-canvas' ></canvas>\n\t\t)\n\t}\n}\n\nexport default VizCanvas;\n","import * as d3 from 'd3';\n\n// import goalsData from \"../data_set/goals/all_goals_latest_years.json\";\n\n// import goalIdMapping from \"../data_set/mapping/goalIdMapping.json\";\n\n// import municipalityIds from \"../data_set/municipalityIdMapping.json\";\n\nimport nodes from \"../data_set/un_data_nodes.json\"\nimport allDimensions from \"../data_set/un_data_dimension_grouping.json\"\n\nexport interface Idimension {\n\tname: string\n\tmax: number | undefined\n\tmin: number | undefined\n\tmean: number | undefined\n\tmedian: number | undefined\n\tindex: number\n}\n\nexport interface InodeDimension {\n\tdimension: string\n\tvalue: number\n}\n\nexport interface Inode {\n  dimensions: InodeDimension[]\n  active?: boolean\n  name: string\n  color?: string\n  selected?: boolean\n}\n\nconst nodeData: any[] = nodes\n\nconst flatDimensions: string[] = <string[]>(allDimensions.flatMap(d => {\n\tconst dims = Object.values(d)\n\treturn dims[0]\n}))\n\nconst dimensions: { [key: string]: Idimension } = {}\n\nconsole.log('nodeData', nodeData)\n\nflatDimensions.forEach((dim, i) => {\n\n  const vals: number[] = <number[]>( nodeData.map((node: any) => {\n    node.active = true\n    const foundDim: InodeDimension | undefined = node.dimensions.find((d: InodeDimension) => d.dimension === dim)\n    return (foundDim && (foundDim.value !== null)) ? +foundDim.value : null\n  }).filter(v => v !== null) )\n\n  const extent = d3.extent(vals)\n  const mean = d3.mean(vals)\n  const median = d3.median(vals)\n\n  // Skip any duplicates (there are 5)\n  if (dimensions[dim]) return;\n\n  dimensions[dim] = {\n    name,\n    max: extent[1],\n    min: extent[0],\n    mean,\n    median,\n    index: i\n  };\n});\n\nconst modelData: number[][] = nodeData.map(node => {\n  const dimensionArr = node.dimensions.map((dimension: InodeDimension) => {\n    const v = dimension.value === null ? -1 : +dimension.value;\n\t\treturn v;\n\t});\n\n\treturn dimensionArr;\n});\n\nexport { nodeData, modelData, dimensions };\n","import React, { Component } from \"react\"\nimport { dimensions, Inode, Idimension, InodeDimension } from '../models/mappings'\n\ninterface props {\n  node: Inode\n}\n\nconst SelectionDimensions = ({ node }: props) => {\n\n  if( !node ) return (<div />)\n\n  return (\n    <div className=\"selection-dimensions-container\">\n\n      <div className=\"municipality-wrap\">\n\n        <div className=\"municipality-name\">{ node.name }</div>\n\n        { node && node.dimensions.map((dimension: InodeDimension, i: number) => {\n            if(dimension) {\n              const dimensionInfo: Idimension = dimensions[ dimension.dimension ]\n\n              let min = dimensionInfo.min ? dimensionInfo.min.toFixed(0) : 'No min',\n                max = dimensionInfo.max ? dimensionInfo.max.toFixed(0) : 'No max',\n                // median = dimensionInfo.median ? dimensionInfo.median.toFixed(0) : 'No mean',\n                value = +dimension.value > -1 ? (+dimension.value).toFixed(1) : 'No data'\n\n              // TODO: Use better logic\n              const valueNumber = +dimension.value || 0,\n                maxNumber = dimensionInfo.max ? +dimensionInfo.max : valueNumber\n\n              return (\n                <div key={ i }>\n                  <div className=\"dimension-title\">\n                    { dimension.dimension }\n                  </div>\n                  <div className=\"dimension-value-container\">\n                    <div className=\"dimension-value-bar\" style={{ backgroundColor: node.color, width: (100 * valueNumber/maxNumber) + '%' }}></div>\n                    <div className=\"dimension-min\">{ min }</div>\n                    {/* <div className=\"dimension-mean\">{ median }</div> */}\n                    <div className=\"dimension-value\">{ value }</div>\n                    <div className=\"dimension-max\">{ max }</div>\n                  </div>\n                </div>\n              )\n            }\n          })\n        }\n\n      </div>\n    </div>\n  )\n}\n\nexport default SelectionDimensions;\n","import React, { Component } from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport municipalityMapping from \"../data_set/municipalityIdMapping\";\n\nvar municipalities = [];\n\nObject.entries(municipalityMapping).forEach(([key, value]) => {\n  municipalities.push({ value: key, name: value });\n});\n\n// Teach Autosuggest how to calculate suggestions for any given input value.\nconst getSuggestions = value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  return inputLength === 0\n    ? []\n    : municipalities.filter(\n        muni => muni.name.toLowerCase().slice(0, inputLength) === inputValue\n      );\n};\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => <div>{ suggestion.name }</div>;\n\n\nclass AutoSuggest extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: \"\",\n      suggestions: []\n    };\n  }\n\n  lookUpCommunityId = communityName => {\n    Object.entries(municipalityMapping).forEach(([key, value]) => {\n      if (value === communityName) {\n        this.props.selectedMunicipalityId(value)\n      }\n    });\n  };\n\n  onChange = (event, { newValue, method }) => {\n    this.setState({\n      value: newValue\n    });\n    if (method === \"click\" || method === \"enter\") {\n      this.lookUpCommunityId(newValue);\n    }\n  };\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  render() {\n    const { value, suggestions } = this.state;\n\n    // Autosuggest will pass through all these props to the input.\n    const inputProps = {\n      placeholder: \"Find a Municipality\",\n      value,\n      onChange: this.onChange\n    };\n\n    return (\n      <Autosuggest\n        suggestions={suggestions}\n        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n        getSuggestionValue={getSuggestionValue}\n        renderSuggestion={renderSuggestion}\n        inputProps={inputProps}\n      />\n    );\n  }\n}\n\nexport default AutoSuggest;\n","import dimGroupingJson from \"../data_set/un_data_dimension_grouping.json\";\nimport { merge } from \"d3-array\";\n\nexport const dimGroupings = dimGroupingJson.map((group) => {\n\treturn {\n\t\t...group,\n\t\tselected: true\n\t}\n})\n\nexport const groupingKey = grouping => {\n\treturn Object.keys(grouping)[0]\n}\n\nexport const selectedKpis = groupings => {\n\tlet kpiIds = []\n\tgroupings.forEach(group => {\n\t\tif (group.selected === true) {\n\t\t\tkpiIds.push(group[groupingKey(group)])\n\t\t}\n\t})\n\treturn merge(kpiIds)\n}","import React, { Component, PropTypes } from \"react\";\n\nclass Checkbox extends Component {\n  state = {\n    isChecked: true\n  };\n\n  toggleCheckboxChange = () => {\n    const { label } = this.props;\n\n    this.setState(({ isChecked }) => ({\n      isChecked: !isChecked\n    }));\n\n    console.log(\"label\", label);\n\n    this.props.onIdChange({ids: this.props.id, checkValue: !this.state.isChecked });\n\n  };\n\n  render() {\n    const { label } = this.props;\n    const { isChecked } = this.state;\n\n    return (\n      <div className=\"checkbox\">\n        <label>\n          <input\n            type=\"checkbox\"\n            value={label}\n            checked={isChecked}\n            onChange={this.toggleCheckboxChange}\n          />\n\n          {label}\n        </label>\n      </div>\n    );\n  }\n}\n\n/*Checkbox.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleCheckboxChange: PropTypes.func.isRequired\n};*/\n\nexport default Checkbox;\n","import React, { Component } from \"react\";\r\nimport { dimGroupings, groupingKey, selectedKpis } from \"../util/dimensionGroupingUtil\";\r\nimport CheckBox from './CheckBox';\r\nimport _ from 'lodash'\r\n\r\nclass DimensionPicker extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\r\n\t\tthis.state = {\r\n\t\t\tgroupings: dimGroupings,\r\n\t\t}\r\n\t}\r\n\r\n\t_changeGoalIds({ checkValue }, changedGoal) {\r\n\t\tchangedGoal.selected = checkValue\r\n\t\tthis.props.onChange(selectedKpis(this.state.groupings))\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"dimension-picker\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p style={{ fontWeight: 'bold', fontSize: 20 }}>Dynamic Landscape</p>\r\n\t\t\t\t\t<p>This app runs a machine learning algorithm <a href=\"https://en.wikipedia.org/wiki/T-distributed_stochastic_neighbor_embedding\">known as T-SNE</a> to visually group Sweden's municipalities based on over 50 criteria associated with the UN sustainable development goals. The animation you see is the algorithm analyzing the data in real time.</p>\r\n\t\t\t\t\t<p><strong>Click</strong> a bubble for more detail about the municipality. <strong>Click away</strong> from the municipality to remove focus. <strong>Scrolling your mouse</strong> to zoom in and out. <strong>Click and drag</strong> to pan the visualization.</p>\r\n\t\t\t\t\t<p>Use the dropdowns on the legend in the bottom-right corner to change what criteria influence the size and color of each bubble in the visualization.</p>\r\n\t\t\t\t\t<p>Criteria can be removed from the grouping algorithm by turning them on and off below. Turning a goal off will disable its associated criteria.</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{this.state.groupings.map((group, i) => {\r\n\t\t\t\t\tlet label = groupingKey(group)\r\n\t\t\t\t\treturn [\r\n\t\t\t\t\t\t<CheckBox\r\n\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\tlabel={label}\r\n\t\t\t\t\t\t\tid={group[label]}\r\n\t\t\t\t\t\t\tclassName=\"checkbox\"\r\n\t\t\t\t\t\t\tonIdChange={element => this._changeGoalIds(element, group)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t];\r\n\t\t\t\t})}\r\n\r\n\t\t\t\t<br/>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p><strong>Created by:</strong></p>\r\n\t\t\t\t\t<p><a href=\"https://twitter.com/tylernwolf\" target=\"_blank\">Tyler Wolf</a></p>\r\n\t\t\t\t\t<p><a href=\"https://www.linkedin.com/in/adam-ekberg-26a376a0/\" target=\"_blank\">Adam Ekberg</a></p>\r\n\t\t\t\t\t<p><a href=\"https://www.linkedin.com/in/karlantonbrotmark/\" target=\"_blank\">Karl-Anton Brötmark</a></p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default DimensionPicker;\r\n","import React, { Component } from \"react\";\nimport AutoSuggest from \"../components/AutoSuggest\";\nimport DimensionPicker from \"../components/DimensionPicker\";\n\ninterface props {\n  onSelectMunicipalityId: (d: string) => void\n  onChangeDimensions: (d: string[]) => void\n}\n\nconst Controls = ({ onSelectMunicipalityId, onChangeDimensions }: props) => {\n\n  return (\n    <div>\n      <div className=\"controls-container\">\n\n        <div className=\"control\">\n          <DimensionPicker\n            dimensions={ [] }\n            onChange={ (dims: string[]) => onChangeDimensions(dims) }\n          />\n        </div>\n\n      </div>\n\n      <div className=\"control node-select\">\n        <AutoSuggest\n          selectedMunicipalityId={(selectedMunicipalityId: string) =>\n            onSelectMunicipalityId(selectedMunicipalityId)\n          }\n        />\n      </div>\n\n    </div>\n  );\n}\n\nexport default Controls;\n","import React, { Component } from \"react\";\nimport Select from \"react-select\";\n\ninterface state {\n  selectedOption?: any\n}\n\ninterface props {\n  onChange: (d: any) => void\n  data: any\n  placeholder: any\n  default: number\n}\n\nclass Dropdown extends Component<props> {\n  options: any[] = []\n  state: state\n\n  constructor(props: any) {\n    super(props);\n\n    Object.entries(props.data).forEach(([key, value], i) => {\n      const v: any = value\n      this.options.push( {value: key, label: key} );\n    });\n\n    this.state = {\n      selectedOption: this.options[this.props.default],\n    }\n\n    this.props.onChange({ selectedOption: this.state.selectedOption })\n  }\n\n  onChange(selectedOption: any){\n    this.setState({ selectedOption });\n    this.props.onChange({selectedOption})\n  }\n\n  render() {\n    const { selectedOption } = this.state;\n\n    return (\n        <div className=\"selection-kpis-dropdown\">\n        <Select\n          value={selectedOption}\n          onChange={ (option) => this.onChange(option)}\n          options={this.options}\n          placeholder= {this.props.placeholder}\n          menuPlacement={'top'}\n          classNamePrefix={'legend-dropdown'}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;\n","import React, { Component } from \"react\";\nimport * as d3 from 'd3'\n\nimport Dropdown from \"./Dropdown\";\n\nimport { dimensions } from \"../models/mappings\";\n\ninterface props {\n  onSelectColor: (d: any) => void\n  onSelectSize: (d: any) => void\n  colorData: any\n  sizeData: any\n  muniSelected: boolean\n}\n\nconst Legend = ({ onSelectColor, onSelectSize, colorData, sizeData, muniSelected }: props) => {\n\n  let color = colorData,\n    size = sizeData\n\n  return (\n    <div className={\"legends-container \" + (muniSelected ? 'pushed' : '') }>\n\n    <div className=\"legend legend-size\">\n\n        <div className=\"control\">\n          <Dropdown\n            default={20}\n            data={dimensions}\n            placeholder=\"Select size\"\n            onChange={(size: any) => onSelectSize(size)}\n          />\n        </div>\n\n        <div className=\"legend-scale\">\n\n          <div className=\"sizes-circles\">\n            <div className=\"big-circle\"></div>\n            <div className=\"medium-circle\"></div>\n            <div className=\"small-circle\"></div>\n          </div>\n\n          <div className=\"sizes-values\">\n            <div className=\"sizes-max\">{ size.max ? size.max.toFixed(0) : '' }</div>\n            <div className=\"sizes-min\">{ size.min ? size.min.toFixed(0) : '' }</div>\n          </div>\n\n        </div>\n\n      </div>\n\n      <div className=\"legend legend-color\">\n\n        <div className=\"control\">\n          <Dropdown\n            default={17}\n            data={dimensions}\n            placeholder=\"Select color\"\n            onChange={(color: any) => onSelectColor(color)}\n          />\n        </div>\n\n        <div className=\"legend-scale\">\n          <div className=\"colors-blocks\">\n            <div className=\"block\"\n              style={{\n                background: 'linear-gradient(90deg, rgba(255,192,0,1) 0%, rgba(9,30,121,1) 100%)',\n                width: 100 + '%'\n              }}\n            ></div>\n          </div>\n          <div className=\"colors-values\">\n            <div className=\"colors-min colors-value\">{ color.min ? color.min.toFixed(0) : '' }</div>\n            <div className=\"colors-max colors-value\">{ color.max ? color.max.toFixed(0) : '' }</div>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default Legend;\n","import React, { Component } from \"react\";\nimport VizCanvas from \"../components/VizCanvas\";\nimport SelectionKpis from \"../components/SelectionKpis\";\nimport Controls from '../components/Controls'\nimport { modelData, nodeData, Inode, Idimension } from \"../models/mappings\";\nimport Legends from \"../components/Legends\";\nimport tsnejs from '../js/tsnejs'\n\nimport { dimensions } from \"../models/mappings\";\n\ninterface state {\n  positionData: []\n  tsneComplete: boolean\n  nodeData: Inode[]\n  modelData: any\n  sizeDimension: Idimension\n  colorDimension: Idimension\n  selectedMunicipalityId?: string\n  dataUpdate: boolean\n  selectedNode?: any\n}\n\nclass Home extends Component {\n  TSNE?: any\n  animateTSNE: any = {}\n  state: state\n\n  constructor(props?: any) {\n    super(props);\n\n    // console.log(\"dimensions\", JSON.stringify(dimensions, null, 4));\n    // console.log(\"Object.keys(dimensions)[0]\", Object.keys(dimensions)[0]);\n    // console.log(\n    //   \"dimensions[Object.keys(dimensions)[0]]\",\n    //   JSON.stringify(dimensions[Object.keys(dimensions)[0]], null, 4)\n    // );\n\n    const kpis = dimensions\n\n    const defaultKpi: string = Object.keys(kpis)[0]\n    const sizeDimension: Idimension = kpis[ defaultKpi ]\n    const colorDimension: Idimension = kpis[ defaultKpi ]\n\n\n    this.state = {\n      positionData: [],\n      tsneComplete: false,\n      nodeData,\n      modelData,\n      sizeDimension, // update this as well?\n      colorDimension, // update this as well?\n      selectedMunicipalityId: undefined,\n      dataUpdate: false\n    };\n  }\n\n  componentDidMount() {\n    this._createTSNE();\n    // this.TSNE.init();\n  }\n\n  _createTSNE() {\n\n    let opt = {\n      epsilon: 10,\n      perplexity: 90,\n      dim: 2\n    }\n\n    if(!this.TSNE) {\n      this.TSNE = new tsnejs.tSNE(opt);\n    }\n\n    this.TSNE.initDataRaw( this.state.modelData );\n\n    this._runTSNE()\n  }\n\n  _runTSNE() {\n    let steps = 0\n\n    this.animateTSNE = () => {\n      if(this.state.dataUpdate) {\n        this._createTSNE()\n        this.setState({ dataUpdate: false })\n        return steps = 0\n      }\n\n      if(steps > 2000) {\n        return\n      }\n\n      this.TSNE.step();\n\n      const positionData = this.TSNE.getSolution();\n\n      this.setState({\n        positionData\n      })\n\n      steps++\n\n      requestAnimationFrame(this.animateTSNE)\n    }\n\n    requestAnimationFrame(this.animateTSNE)\n  }\n\n  _stopTSNE() {\n    this.animateTSNE = () => {}\n  }\n\n  _selectNode(node: any) {\n    this.setState({ selectedNode: node });\n  }\n\n  _selectColor({ selectedOption }: { selectedOption: any }) {\n    const kpi: any = dimensions\n    const colorDimension: string = kpi[selectedOption.value]\n    this.setState({ colorDimension })\n  }\n\n  _selectSize({ selectedOption }: { selectedOption: any } ) {\n    const kpi: any = dimensions\n    const sizeDimension: string = kpi[selectedOption.value]\n    this.setState({ sizeDimension })\n  }\n\n  _selectedMunicipalityId(name: string) {\n    let selectedNode = null;\n\n    nodeData.forEach((node: any) => {\n      let isNode = node.name == name;\n\n      node.active = isNode;\n      node.selected = isNode;\n\n      if (isNode) selectedNode = node;\n    });\n\n    // let node = this.props.nodeData[ hitNode.index ]\n\n    this.setState({ selectedNode });\n  }\n\n  _changeDimensions(dims: string[]) {\n\n    const updatedNodeData = nodeData.map((node,i) => {\n      let dimensions = node.dimensions.filter((dimension: any) => dims.includes(dimension.dimension))\n\n      return {\n        ...node,\n        dimensions\n      }\n\n    })\n\n    let updatedModelData = updatedNodeData.map(muni => {\n      const kpiArr = muni.dimensions.map((kpi: any) => {\n        const v = kpi.value === undefined ? -1 : kpi.value;\n\n        return v;\n      });\n\n      return kpiArr;\n    });\n\n    // If no data, return all zeroes for everything\n    if(!updatedModelData[0].length) {\n      updatedModelData = updatedModelData.map(() => [0])\n    }\n\n    // const visibleKpis = dims.map(dim => ({ key: dim, value: dimensionss[dim].name }))\n\n    this.setState({\n      // nodeData: updatedNodeData,\n      modelData: updatedModelData,\n      dataUpdate: true,\n    });\n\n  }\n\n  render() {\n    return (\n      <div className=\"home-wrap\">\n        <Legends\n          colorData={this.state.colorDimension}\n          sizeData={this.state.sizeDimension}\n          onSelectColor={ (color: any) => this._selectColor(color) }\n          onSelectSize={ (size: any) => this._selectSize(size) }\n          muniSelected={ Boolean(this.state.selectedNode) }\n        />\n\n        <SelectionKpis node={this.state.selectedNode} />\n\n        <Controls\n          onSelectMunicipalityId={ (id: string) => this._selectedMunicipalityId(id) }\n          onChangeDimensions={ (dims: string[]) => this._changeDimensions(dims) }\n        />\n\n        <VizCanvas\n          positionData={this.state.positionData}\n          nodeData={this.state.nodeData}\n          radiusValue={this.state.sizeDimension}\n          colorValue={this.state.colorDimension}\n          onClick={(node: any) => this._selectNode(node)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react'\nimport {\n  Route,\n  Switch,\n  HashRouter\n} from 'react-router-dom'\nimport { withRouter } from 'react-router'\nimport {\n  CSSTransition,\n  TransitionGroup,\n} from 'react-transition-group'\nimport Home from '../layouts/Home'\n// import Maps from '../layouts/Maps'\n\n\ninterface props {\n  location: any\n}\n\nconst Routes = ({ location }: props) => {\n\n  return (\n    <main>\n      <TransitionGroup>\n        <CSSTransition\n          key={ location.key }\n          mountOnEnter={ true }\n          unmountOnExit={ true }\n          timeout={ 300 }\n          classNames=\"page-level\"\n        >\n          <HashRouter>\n            <Switch>\n              <Route path=\"/\" exact component={ Home }/>\n              {/* <Route path=\"/maps\" exact component={ Maps }/> */}\n              <Route path=\"*\" component={ Home }/>\n            </Switch>\n          </HashRouter>\n        </CSSTransition>\n      </TransitionGroup>\n    </main>\n  )\n  \n}\n\nconst RoutesWithRouter = withRouter(Routes)\n\nexport { RoutesWithRouter }\n","import React, { Component } from \"react\";\nimport { Router } from \"react-router-dom\";\n\nimport { createBrowserHistory } from \"history\";\n\nimport { RoutesWithRouter as Routes } from \"./components/Routes\";\n\nconst history = createBrowserHistory();\nhistory.listen((location, action) => {\n  window.gtag(\"config\", \"UA-137717045-1\", {\n    page_title: location.pathname,\n    page_path: location.pathname\n  });\n});\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <Routes />\n      </Router>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}